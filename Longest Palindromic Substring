class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        l=len(s)*2+3 
        # new list to store '#' between each char
        li = [None] * l
        li[0]='$'
        li[l-1]='@'
        for i in range(len(s)):
            li[(2*i) + 1] = '#'
            li[(2*i) + 2] = s[i]
        
        #store max len pal substr in list p
        p=[0]*len(li)
        center,right = 0,0
        for i in range(1,len(li)-1):
            mir=(2*center)-i
            
            if i<right:
                p[i]=min(right-i,p[mir])
            
            while li[i+(1+p[i])] == li[i-(1+p[i])]:
                p[i]+=1
            
            if i+p[i] > right:
                center=i
                right=i+p[i]
                
        #print the longest pal substr
        i=p.index(max(p))
        a=(i-1-max(p))//2  #list siz of p is double the size of s. So divide by 2 here.
        b=(i-1+max(p))//2
        return(s[a:b])
        
