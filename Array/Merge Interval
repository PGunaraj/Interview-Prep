#O(n logn)

def merge(self, intervals):
    result=[]
    l=len(intervals)

    #when intervals is empty, return empty result
    if l==0:
        return result

    #sort intervals in ascending order according to the start
    intervals=sorted(intervals,key=lambda x:x.start)

    #add the 1st interval to result
    result.append([intervals[0].start,intervals[0].end])

    #from 2nd interval, merge it with result
    for i in range(1,l):
        if intervals[i].start>result[len(result)-1][1]:
            result.append([intervals[i].start,intervals[i].end])
        else:
            result[len(result)-1][0] = min(result[len(result)-1][0],intervals[i].start)
            result[len(result)-1][1] = max(result[len(result)-1][1],intervals[i].end)

    return result
